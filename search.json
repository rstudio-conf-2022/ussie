[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 ussie authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/ussie.html","id":"get-match-results","dir":"Articles","previous_headings":"","what":"Get match results","title":"ussie","text":"find leagues available, use uss_countries(): get data given league, use uss_get_matches() country: uss_get_matches() also accepts ... arguments; passed dplyr::filter():","code":"uss_countries() #> [1] \"england\" \"germany\" \"holland\" \"italy\"   \"spain\" uss_get_matches(\"england\") #> # A tibble: 192,004 × 8 #>    country tier  season date       home         visitor goals_home goals_visitor #>    <chr>   <fct>  <int> <date>     <chr>        <chr>        <int>         <int> #>  1 England 1       1888 1888-12-15 Accrington … Aston …          1             1 #>  2 England 1       1888 1889-01-19 Accrington … Blackb…          0             2 #>  3 England 1       1888 1889-03-23 Accrington … Bolton…          2             3 #>  4 England 1       1888 1888-12-01 Accrington … Burnley          5             1 #>  5 England 1       1888 1888-10-13 Accrington … Derby …          6             2 #>  6 England 1       1888 1888-12-29 Accrington … Everton          3             1 #>  7 England 1       1888 1889-01-26 Accrington … Notts …          1             2 #>  8 England 1       1888 1888-10-20 Accrington … Presto…          0             0 #>  9 England 1       1888 1889-04-20 Accrington … Stoke …          2             0 #> 10 England 1       1888 1888-11-24 Accrington … West B…          2             1 #> # … with 191,994 more rows uss_get_matches(   \"england\",    season == 1990,    home == \"Leeds United\" | visitor == \"Leeds United\" ) #> # A tibble: 38 × 8 #>    country tier  season date       home         visitor goals_home goals_visitor #>    <chr>   <fct>  <int> <date>     <chr>        <chr>        <int>         <int> #>  1 England 1       1990 1991-03-17 Arsenal      Leeds …          2             0 #>  2 England 1       1990 1990-10-27 Aston Villa  Leeds …          0             0 #>  3 England 1       1990 1991-03-30 Chelsea      Leeds …          1             2 #>  4 England 1       1990 1990-11-24 Coventry Ci… Leeds …          1             1 #>  5 England 1       1990 1990-10-06 Crystal Pal… Leeds …          1             1 #>  6 England 1       1990 1991-04-23 Derby County Leeds …          0             1 #>  7 England 1       1990 1990-08-25 Everton      Leeds …          2             3 #>  8 England 1       1990 1990-09-29 Leeds United Arsenal          2             2 #>  9 England 1       1990 1991-05-04 Leeds United Aston …          5             2 #> 10 England 1       1990 1990-12-26 Leeds United Chelsea          4             1 #> # … with 28 more rows"},{"path":"/articles/ussie.html","id":"get-match-results-for-teams","dir":"Articles","previous_headings":"","what":"Get match results for teams","title":"ussie","text":"matches tibble, row unique football match. make calculations course team’s season, may useful provide additional form: teams_matches tibble. form, row match perpsective one teams. Thus, match can represented two rows, one team. can get teams_matches tibble using uss_make_teams_matches(): look specific date: can see match represented twice: home team visiting team.","code":"england_1_1990 <-   uss_get_matches(\"england\", tier == 1, season == 1990) |>   uss_make_teams_matches()  england_1_1990 #> # A tibble: 760 × 9 #>    country tier  season team    date       at_home opponent          goals_for #>    <chr>   <fct>  <int> <chr>   <date>     <lgl>   <chr>                 <int> #>  1 England 1       1990 Arsenal 1990-08-25 FALSE   Wimbledon                 3 #>  2 England 1       1990 Arsenal 1990-08-29 TRUE    Luton Town                2 #>  3 England 1       1990 Arsenal 1990-09-01 TRUE    Tottenham Hotspur         0 #>  4 England 1       1990 Arsenal 1990-09-08 FALSE   Everton                   1 #>  5 England 1       1990 Arsenal 1990-09-15 TRUE    Chelsea                   4 #>  6 England 1       1990 Arsenal 1990-09-22 FALSE   Nottingham Forest         2 #>  7 England 1       1990 Arsenal 1990-09-29 FALSE   Leeds United              2 #>  8 England 1       1990 Arsenal 1990-10-06 TRUE    Norwich City              2 #>  9 England 1       1990 Arsenal 1990-10-20 FALSE   Manchester United         1 #> 10 England 1       1990 Arsenal 1990-10-27 TRUE    Sunderland                1 #> # … with 750 more rows, and 1 more variable: goals_against <int> england_1_1990 |>   filter(date == as.Date(\"1990-09-29\")) #> # A tibble: 20 × 9 #>    country tier  season team               date       at_home opponent goals_for #>    <chr>   <fct>  <int> <chr>              <date>     <lgl>   <chr>        <int> #>  1 England 1       1990 Arsenal            1990-09-29 FALSE   Leeds U…         2 #>  2 England 1       1990 Aston Villa        1990-09-29 FALSE   Tottenh…         1 #>  3 England 1       1990 Chelsea            1990-09-29 TRUE    Sheffie…         2 #>  4 England 1       1990 Coventry City      1990-09-29 TRUE    Queens …         3 #>  5 England 1       1990 Crystal Palace     1990-09-29 FALSE   Derby C…         2 #>  6 England 1       1990 Derby County       1990-09-29 TRUE    Crystal…         0 #>  7 England 1       1990 Everton            1990-09-29 TRUE    Southam…         3 #>  8 England 1       1990 Leeds United       1990-09-29 TRUE    Arsenal          2 #>  9 England 1       1990 Liverpool          1990-09-29 FALSE   Sunderl…         1 #> 10 England 1       1990 Luton Town         1990-09-29 FALSE   Norwich…         3 #> 11 England 1       1990 Manchester City    1990-09-29 FALSE   Wimbled…         1 #> 12 England 1       1990 Manchester United  1990-09-29 TRUE    Notting…         0 #> 13 England 1       1990 Norwich City       1990-09-29 TRUE    Luton T…         1 #> 14 England 1       1990 Nottingham Forest  1990-09-29 FALSE   Manches…         1 #> 15 England 1       1990 Queens Park Range… 1990-09-29 FALSE   Coventr…         1 #> 16 England 1       1990 Sheffield United   1990-09-29 FALSE   Chelsea          2 #> 17 England 1       1990 Southampton        1990-09-29 FALSE   Everton          0 #> 18 England 1       1990 Sunderland         1990-09-29 TRUE    Liverpo…         0 #> 19 England 1       1990 Tottenham Hotspur  1990-09-29 TRUE    Aston V…         2 #> 20 England 1       1990 Wimbledon          1990-09-29 TRUE    Manches…         1 #> # … with 1 more variable: goals_against <int>"},{"path":"/articles/ussie.html","id":"get-season-results","dir":"Articles","previous_headings":"","what":"Get season results","title":"ussie","text":"another form: seasons tibble. contain results accumulated seasons. couple functions, takes teams_matches data frame: uss_make_seasons_cumulative(): returns cumulative results following every team’s matches. uss_make_seasons_final(): returns results end team’s seasons. functions, columns returned : matches, wins, losses, etc: can call functions optional argument specify points-per-win. argument, fn_points_per_win meant function, called arguments country season, returns number points win season. default, uss_points_per_win(), provided: function provide must vectorised country season: just want specify constant two three points per season, can provide anonymous function. using R > 4.1.0, can use new syntax:","code":"england_1_1990 |>   uss_make_seasons_cumulative() |>   arrange(team, date) #> # A tibble: 760 × 12 #> # Groups:   country, tier, season, team [20] #>    country tier  season team    date       matches  wins draws losses points #>    <chr>   <fct>  <int> <chr>   <date>       <int> <int> <int>  <int>  <int> #>  1 England 1       1990 Arsenal 1990-08-25       1     1     0      0      3 #>  2 England 1       1990 Arsenal 1990-08-29       2     2     0      0      6 #>  3 England 1       1990 Arsenal 1990-09-01       3     2     1      0      7 #>  4 England 1       1990 Arsenal 1990-09-08       4     2     2      0      8 #>  5 England 1       1990 Arsenal 1990-09-15       5     3     2      0     11 #>  6 England 1       1990 Arsenal 1990-09-22       6     4     2      0     14 #>  7 England 1       1990 Arsenal 1990-09-29       7     4     3      0     15 #>  8 England 1       1990 Arsenal 1990-10-06       8     5     3      0     18 #>  9 England 1       1990 Arsenal 1990-10-20       9     6     3      0     21 #> 10 England 1       1990 Arsenal 1990-10-27      10     7     3      0     24 #> # … with 750 more rows, and 2 more variables: goals_for <int>, #> #   goals_against <int> england_1_1990 |>   uss_make_seasons_final() |>   arrange(desc(points)) #> # A tibble: 20 × 12 #> # Groups:   country, tier, season [1] #>    country tier  season team        date       matches  wins draws losses points #>    <chr>   <fct>  <int> <chr>       <date>       <int> <int> <int>  <int>  <int> #>  1 England 1       1990 Arsenal     1991-05-11      38    24    13      1     85 #>  2 England 1       1990 Liverpool   1991-05-11      38    23     7      8     76 #>  3 England 1       1990 Crystal Pa… 1991-05-11      38    20     9      9     69 #>  4 England 1       1990 Leeds Unit… 1991-05-11      38    19     7     12     64 #>  5 England 1       1990 Manchester… 1991-05-11      38    17    11     10     62 #>  6 England 1       1990 Manchester… 1991-05-20      38    16    12     10     60 #>  7 England 1       1990 Wimbledon   1991-05-11      38    14    14     10     56 #>  8 England 1       1990 Nottingham… 1991-05-11      38    14    12     12     54 #>  9 England 1       1990 Everton     1991-05-11      38    13    12     13     51 #> 10 England 1       1990 Chelsea     1991-05-11      38    13    10     15     49 #> 11 England 1       1990 Tottenham … 1991-05-20      38    11    16     11     49 #> 12 England 1       1990 Queens Par… 1991-05-11      38    12    10     16     46 #> 13 England 1       1990 Sheffield … 1991-05-11      38    13     7     18     46 #> 14 England 1       1990 Norwich Ci… 1991-05-11      38    13     6     19     45 #> 15 England 1       1990 Southampton 1991-05-11      38    12     9     17     45 #> 16 England 1       1990 Coventry C… 1991-05-11      38    11    11     16     44 #> 17 England 1       1990 Aston Villa 1991-05-11      38     9    14     15     41 #> 18 England 1       1990 Luton Town  1991-05-11      38    10     7     21     37 #> 19 England 1       1990 Sunderland  1991-05-11      38     8    10     20     34 #> 20 England 1       1990 Derby Coun… 1991-05-11      38     5     9     24     24 #> # … with 2 more variables: goals_for <int>, goals_against <int> uss_points_per_win(\"england\", 1980) #> [1] 2 uss_points_per_win(c(\"england\", \"england\"), c(1980, 1981)) #> [1] 2 3 p <- \\(...) 3 # use dots to allow unspecified arguments to pass  p(\"england\", 1066) #> [1] 3"},{"path":"/articles/ussie.html","id":"plot-results-over-seasons","dir":"Articles","previous_headings":"","what":"Plot results over seasons","title":"ussie","text":"countries included uss_countries(), \"england\" data one tier, can see effects relegation promotion. can use uss_plot_seasons_tiers() look performance seasons, using data returned uss_make_seasons_final(): default show wins y-axis:  can provide argument, aes_y, can supply expression just ggplot2:","code":"leeds_norwich <-    uss_get_matches(\"england\") |>   uss_make_teams_matches() |>   filter(team %in% c(\"Leeds United\", \"Norwich City\")) |>   uss_make_seasons_final() |>   arrange(team, season)  leeds_norwich #> # A tibble: 178 × 12 #> # Groups:   country, tier, season [155] #>    country tier  season team        date       matches  wins draws losses points #>    <chr>   <fct>  <int> <chr>       <date>       <int> <int> <int>  <int>  <int> #>  1 England 2       1920 Leeds Unit… 1921-05-07      42    14    10     18     38 #>  2 England 2       1921 Leeds Unit… 1922-05-06      42    16    13     13     45 #>  3 England 2       1922 Leeds Unit… 1923-05-05      42    18    11     13     47 #>  4 England 2       1923 Leeds Unit… 1924-05-03      42    21    12      9     54 #>  5 England 1       1924 Leeds Unit… 1925-05-02      42    11    12     19     34 #>  6 England 1       1925 Leeds Unit… 1926-05-01      42    14     8     20     36 #>  7 England 1       1926 Leeds Unit… 1927-05-07      42    11     8     23     30 #>  8 England 2       1927 Leeds Unit… 1928-05-05      42    25     7     10     57 #>  9 England 1       1928 Leeds Unit… 1929-05-04      42    16     9     17     41 #> 10 England 1       1929 Leeds Unit… 1930-05-03      42    20     6     16     46 #> # … with 168 more rows, and 2 more variables: goals_for <int>, #> #   goals_against <int> uss_plot_seasons_tiers(leeds_norwich) uss_plot_seasons_tiers(leeds_norwich, aes_y = wins - losses)"},{"path":"/articles/ussie.html","id":"add-results","dir":"Articles","previous_headings":"","what":"Add results","title":"ussie","text":"use vctrs package help build function, uss_result() creates S3 vector display results: point, method defined uss_result() format(). function vectorised; arguments must length:","code":"uss_get_matches(\"italy\") |>   uss_make_teams_matches() |>   mutate(     result = uss_result(goals_for, goals_against),     .after = opponent   ) #> # A tibble: 50,808 × 10 #>    country tier  season team     date       at_home opponent    result goals_for #>    <chr>   <fct>  <int> <chr>    <date>     <lgl>   <chr>       <uss_>     <int> #>  1 Italy   1       1929 AC Milan 1929-10-06 TRUE    Brescia Ca…  W 4-1         4 #>  2 Italy   1       1929 AC Milan 1929-10-13 TRUE    Modena FC    W 1-0         1 #>  3 Italy   1       1929 AC Milan 1929-10-20 FALSE   SSC Napoli   L 1-2         1 #>  4 Italy   1       1929 AC Milan 1929-10-27 TRUE    AS Roma      W 3-1         3 #>  5 Italy   1       1929 AC Milan 1929-11-03 FALSE   Bologna FC   D 1-1         1 #>  6 Italy   1       1929 AC Milan 1929-11-10 TRUE    Inter        L 1-2         1 #>  7 Italy   1       1929 AC Milan 1929-11-17 FALSE   US Livorno   L 1-4         1 #>  8 Italy   1       1929 AC Milan 1929-11-24 TRUE    Lazio Roma   W 2-1         2 #>  9 Italy   1       1929 AC Milan 1929-12-08 FALSE   Juventus     L 1-3         1 #> 10 Italy   1       1929 AC Milan 1929-12-15 TRUE    US Cremone…  W 5-2         5 #> # … with 50,798 more rows, and 1 more variable: goals_against <int> uss_result(c(1, 2, 3), c(2, 2, 2)) #> <ussie_result[3]> #> [1] L 1-2 D 2-2 W 3-2"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ian Lyttle. Author, maintainer. Emma Rand. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lyttle , Rand E (2022). ussie: Work European Football League Data. R package version 0.0.0.9000, https://github.com/rstudio-conf-2022/ussie.","code":"@Manual{,   title = {ussie: Work with European Football League Data},   author = {Ian Lyttle and Emma Rand},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://github.com/rstudio-conf-2022/ussie}, }"},{"path":"/index.html","id":"ussie","dir":"","previous_headings":"","what":"Work with European Football League Data","title":"Work with European Football League Data","text":"goal ussie make first attempt demo package folks build “Building Tidy Tools” course rstudio::conf(2022L).","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Work with European Football League Data","text":"can install development version ussie GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"rstudio-conf-2022/ussie\")"},{"path":"/index.html","id":"notes","dir":"","previous_headings":"","what":"Notes","title":"Work with European Football League Data","text":"want note functions used manage development package: Package-development setup: usethis::edit_r_profile() Git setup - good git setup, current tidyverse recommendation use https rather ssh: gert::git_config_global_set() can use \"user.name\", \"user.email\" usethis::git_vaccinate() usethis::git_default_branch_rename() rename default branch existing repo GitHub setup: usethis::create_github_token() gitcreds::gitcreds_set() Verification: usethis::git_sitrep() Development: usethis::create_package() usethis::use_git() usethis::use_github() usethis::use_readme_rmd() usethis::use_package() usethis::use_test() usethis::use_github_action_check_standard() thinking CRAN add #' @importFrom rlang .data ussie-package.R - prefer usethis::use_tidy_eval() even better: usethis::use_import_from(), e.g. usethis::use_import_from(\"rlang\", \".data\") usethis::use_pkgdown(), usethis::use_github_action(\"pkgdown\") usethis::use_github_pages(): configure GH pages pkg action succeds, wait minute et voilà! usethis::pr_init(), usethis::pr_push(), usethis::pr_finish(), usethis::pr_resume() usethis::use_news_md() note, need {shiny}, {diffviewer} review snapshot tests","code":""},{"path":"/reference/uss_countries.html","id":null,"dir":"Reference","previous_headings":"","what":"Get available countries — uss_countries","title":"Get available countries — uss_countries","text":"countries league-play data available engsoccerdata.","code":""},{"path":"/reference/uss_countries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get available countries — uss_countries","text":"","code":"uss_countries()"},{"path":"/reference/uss_countries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get available countries — uss_countries","text":"character vector containing names available countries.","code":""},{"path":"/reference/uss_countries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get available countries — uss_countries","text":"","code":"uss_countries() #> [1] \"england\" \"germany\" \"holland\" \"italy\"   \"spain\""},{"path":"/reference/uss_get_matches.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a league-play tibble — uss_get_matches","title":"Get a league-play tibble — uss_get_matches","text":"Gets league-play data game, engsoccerdata, returning tibble standardised format. can pass filtering expressions via dots (...), evaluated using dplyr::filter(). Filtering last step; operates returned data.","code":""},{"path":"/reference/uss_get_matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a league-play tibble — uss_get_matches","text":"","code":"uss_get_matches(country = uss_countries(), ...)"},{"path":"/reference/uss_get_matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a league-play tibble — uss_get_matches","text":"country character scalar, specifies league. uss_countries() returns choices available engsoccerdata ... <data-masking> Expressions return logical value, defined terms variables .data. multiple expressions included, combined & operator. rows conditions evaluate TRUE kept.","code":""},{"path":"/reference/uss_get_matches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a league-play tibble — uss_get_matches","text":"tibble columns country, date, season, tier, home, visitor, goals_home, goals_visitor.","code":""},{"path":"/reference/uss_get_matches.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a league-play tibble — uss_get_matches","text":"uss_countries() returns available choices; \"england\" default. function relies internal function, uss_make_matches(), parse source data; speed performance, memoised (caching) version function used, uss_make_matches_mem().","code":""},{"path":"/reference/uss_get_matches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a league-play tibble — uss_get_matches","text":"","code":"uss_get_matches(\"england\") #> # A tibble: 192,004 × 8 #>    country tier  season date       home         visitor goals_home goals_visitor #>    <chr>   <fct>  <int> <date>     <chr>        <chr>        <int>         <int> #>  1 England 1       1888 1888-12-15 Accrington … Aston …          1             1 #>  2 England 1       1888 1889-01-19 Accrington … Blackb…          0             2 #>  3 England 1       1888 1889-03-23 Accrington … Bolton…          2             3 #>  4 England 1       1888 1888-12-01 Accrington … Burnley          5             1 #>  5 England 1       1888 1888-10-13 Accrington … Derby …          6             2 #>  6 England 1       1888 1888-12-29 Accrington … Everton          3             1 #>  7 England 1       1888 1889-01-26 Accrington … Notts …          1             2 #>  8 England 1       1888 1888-10-20 Accrington … Presto…          0             0 #>  9 England 1       1888 1889-04-20 Accrington … Stoke …          2             0 #> 10 England 1       1888 1888-11-24 Accrington … West B…          2             1 #> # … with 191,994 more rows"},{"path":"/reference/uss_make_matches.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a standard league-play tibble — uss_make_matches","title":"Make a standard league-play tibble — uss_make_matches","text":"Given league-play data frame engsoccer, returns tibble standardised colomn-names types, e.g. date Date. two versions function: uss_make_matches() working version uss_make_matches_mem() memoised (caching) version uss_make_matches_mem() calls uss_make_matches(); resturn identical results.","code":""},{"path":"/reference/uss_make_matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a standard league-play tibble — uss_make_matches","text":"","code":"uss_make_matches(data_engsoc, country)  uss_make_matches_mem(data_engsoc, country)"},{"path":"/reference/uss_make_matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a standard league-play tibble — uss_make_matches","text":"data_engsoc data.frame obtained engsoccerdata. country character scalar, specifies league. uss_countries() returns choices available engsoccerdata","code":""},{"path":"/reference/uss_make_matches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a standard league-play tibble — uss_make_matches","text":"tibble columns country, date, season, tier, home, visitor, goals_home, goals_visitor.","code":""},{"path":"/reference/uss_make_matches.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a standard league-play tibble — uss_make_matches","text":"memoised version function provided takes little time parse dates nearly 200,000 league-play matches England. package loaded, wrapper function, uss_make_matches_mem(), \"replaced\" memoised version: see zzz.R. wrapper function used couple reasons: maintain access un-memoised function R CMD CHECK can see tibble package actually used; throws note original function, uss_make_matches_mem(), overwritten","code":""},{"path":"/reference/uss_make_matches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a standard league-play tibble — uss_make_matches","text":"","code":"uss_make_matches(engsoccerdata::italy, \"Italy\") #> # A tibble: 25,404 × 8 #>    country tier  season date       home         visitor goals_home goals_visitor #>    <chr>   <fct>  <int> <date>     <chr>        <chr>        <int>         <int> #>  1 Italy   1       1934 1934-09-30 Lazio Roma   US Liv…          6             1 #>  2 Italy   1       1934 1934-09-30 Torino FC    Unione…          3             1 #>  3 Italy   1       1934 1934-09-30 Sampierdare… Bologn…          2             1 #>  4 Italy   1       1934 1934-09-30 SSC Napoli   US Ale…          0             1 #>  5 Italy   1       1934 1934-09-30 ACF Fiorent… AS Roma          4             1 #>  6 Italy   1       1934 1934-09-30 Brescia Cal… Juvent…          0             2 #>  7 Italy   1       1934 1934-09-30 Inter        US Pal…          3             0 #>  8 Italy   1       1934 1934-09-30 Pro Vercelli AC Mil…          1             2 #>  9 Italy   1       1934 1934-10-07 AC Milan     ACF Fi…          1             1 #> 10 Italy   1       1934 1934-10-07 US Livorno   Inter            1             1 #> # … with 25,394 more rows uss_make_matches_mem(engsoccerdata::italy, \"Italy\") #> # A tibble: 25,404 × 8 #>    country tier  season date       home         visitor goals_home goals_visitor #>    <chr>   <fct>  <int> <date>     <chr>        <chr>        <int>         <int> #>  1 Italy   1       1934 1934-09-30 Lazio Roma   US Liv…          6             1 #>  2 Italy   1       1934 1934-09-30 Torino FC    Unione…          3             1 #>  3 Italy   1       1934 1934-09-30 Sampierdare… Bologn…          2             1 #>  4 Italy   1       1934 1934-09-30 SSC Napoli   US Ale…          0             1 #>  5 Italy   1       1934 1934-09-30 ACF Fiorent… AS Roma          4             1 #>  6 Italy   1       1934 1934-09-30 Brescia Cal… Juvent…          0             2 #>  7 Italy   1       1934 1934-09-30 Inter        US Pal…          3             0 #>  8 Italy   1       1934 1934-09-30 Pro Vercelli AC Mil…          1             2 #>  9 Italy   1       1934 1934-10-07 AC Milan     ACF Fi…          1             1 #> 10 Italy   1       1934 1934-10-07 US Livorno   Inter            1             1 #> # … with 25,394 more rows"},{"path":"/reference/uss_make_seasons_cumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Make season-based calculations — uss_make_seasons_cumulative","title":"Make season-based calculations — uss_make_seasons_cumulative","text":"Given teams-matches data frame (returned uss_make_teams_matches()), return return data frame wins, losses, points, etc.: cumulative, course season: uss_make_seasons_cumulative() final result season: uss_make_seasons_final()","code":""},{"path":"/reference/uss_make_seasons_cumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make season-based calculations — uss_make_seasons_cumulative","text":"","code":"uss_make_seasons_cumulative(   data_teams_matches,   fn_points_per_win = uss_points_per_win )  uss_make_seasons_final(   data_teams_matches,   fn_points_per_win = uss_points_per_win )"},{"path":"/reference/uss_make_seasons_cumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make season-based calculations — uss_make_seasons_cumulative","text":"data_teams_matches data frame created using uss_make_teams_matches() fn_points_per_win function vectorized arguments country, season, returns integer indicating points-per-win. default function provided, uss_points_per_win(), includes countries uss_countries(). can also provide purrr-style anonymous function, e.g. ~3.","code":""},{"path":"/reference/uss_make_seasons_cumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make season-based calculations — uss_make_seasons_cumulative","text":"tibble columns country, tier, season, team, date, matches, wins, draws, losses, points, goals_for, goals_against.","code":""},{"path":"/reference/uss_make_seasons_cumulative.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make season-based calculations — uss_make_seasons_cumulative","text":"","code":"italy <- uss_get_matches(\"italy\") |> uss_make_teams_matches() uss_make_seasons_cumulative(italy) #> # A tibble: 50,808 × 12 #> # Groups:   country, tier, season, team [1,516] #>    country tier  season team     date       matches  wins draws losses points #>    <chr>   <fct>  <int> <chr>    <date>       <int> <int> <int>  <int>  <int> #>  1 Italy   1       1929 AC Milan 1929-10-06       1     1     0      0      2 #>  2 Italy   1       1929 AC Milan 1929-10-13       2     2     0      0      4 #>  3 Italy   1       1929 AC Milan 1929-10-20       3     2     0      1      4 #>  4 Italy   1       1929 AC Milan 1929-10-27       4     3     0      1      6 #>  5 Italy   1       1929 AC Milan 1929-11-03       5     3     1      1      7 #>  6 Italy   1       1929 AC Milan 1929-11-10       6     3     1      2      7 #>  7 Italy   1       1929 AC Milan 1929-11-17       7     3     1      3      7 #>  8 Italy   1       1929 AC Milan 1929-11-24       8     4     1      3      9 #>  9 Italy   1       1929 AC Milan 1929-12-08       9     4     1      4      9 #> 10 Italy   1       1929 AC Milan 1929-12-15      10     5     1      4     11 #> # … with 50,798 more rows, and 2 more variables: goals_for <int>, #> #   goals_against <int> uss_make_seasons_final(italy) #> # A tibble: 1,516 × 12 #> # Groups:   country, tier, season [85] #>    country tier  season team        date       matches  wins draws losses points #>    <chr>   <fct>  <int> <chr>       <date>       <int> <int> <int>  <int>  <int> #>  1 Italy   1       1929 AC Milan    1930-07-06      34    11    10     13     32 #>  2 Italy   1       1929 AS Roma     1930-07-06      34    15     6     13     36 #>  3 Italy   1       1929 Bologna FC  1930-07-06      34    14     8     12     36 #>  4 Italy   1       1929 Brescia Ca… 1930-07-06      34    13     7     14     33 #>  5 Italy   1       1929 Calcio Pad… 1930-07-06      34    11     4     19     26 #>  6 Italy   1       1929 Genova 189… 1930-07-06      34    20     8      6     48 #>  7 Italy   1       1929 Inter       1930-07-06      34    22     6      6     50 #>  8 Italy   1       1929 Juventus    1930-07-06      34    19     7      8     45 #>  9 Italy   1       1929 Lazio Roma  1930-07-06      34    10     8     16     28 #> 10 Italy   1       1929 Modena FC   1930-07-06      34    11     8     15     30 #> # … with 1,506 more rows, and 2 more variables: goals_for <int>, #> #   goals_against <int>"},{"path":"/reference/uss_make_teams_matches.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a teams-matches tibble — uss_make_teams_matches","title":"Make a teams-matches tibble — uss_make_teams_matches","text":"essentially matches data; , row returned every combination team match. Thus two rows returned row data_matches tibble: one team.","code":""},{"path":"/reference/uss_make_teams_matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a teams-matches tibble — uss_make_teams_matches","text":"","code":"uss_make_teams_matches(data_matches)"},{"path":"/reference/uss_make_teams_matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a teams-matches tibble — uss_make_teams_matches","text":"data_matches data.frame created using uss_get_matches() uss_make_matches()","code":""},{"path":"/reference/uss_make_teams_matches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a teams-matches tibble — uss_make_teams_matches","text":"tibble columns country, tier, season, team, date, opponent, at_home, goals_for, goals_against; ordered country, tier, season, team, date.","code":""},{"path":"/reference/uss_make_teams_matches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a teams-matches tibble — uss_make_teams_matches","text":"","code":"uss_get_matches(\"england\") |>   uss_make_teams_matches() |>   dplyr::filter(team == \"Leeds United\") |>   tail() #> # A tibble: 6 × 9 #>   country tier  season team  date       at_home opponent goals_for goals_against #>   <chr>   <fct>  <int> <chr> <date>     <lgl>   <chr>        <int>         <int> #> 1 England 3       2009 Leed… 2010-04-10 TRUE    Southen…         2             0 #> 2 England 3       2009 Leed… 2010-04-13 FALSE   Carlisl…         3             1 #> 3 England 3       2009 Leed… 2010-04-17 FALSE   Gilling…         2             3 #> 4 England 3       2009 Leed… 2010-04-24 TRUE    Milton …         4             1 #> 5 England 3       2009 Leed… 2010-05-01 FALSE   Charlto…         0             1 #> 6 England 3       2009 Leed… 2010-05-08 TRUE    Bristol…         2             1"},{"path":"/reference/uss_plot_seasons_tiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot over season-final results — uss_plot_seasons_tiers","title":"Plot over season-final results — uss_plot_seasons_tiers","text":"Returns ggplot: season x-axis faceted team two layers: rectangles shaded tier points showing measure (default wins) y-axis countries included uss_countries(), \"england\" data one tier.","code":""},{"path":"/reference/uss_plot_seasons_tiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot over season-final results — uss_plot_seasons_tiers","text":"","code":"uss_plot_seasons_tiers(data_seasons, aes_y = .data$wins, ncol = 1)"},{"path":"/reference/uss_plot_seasons_tiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot over season-final results — uss_plot_seasons_tiers","text":"data_seasons, data frame created using uss_make_seasons_final(). aes_y, <data-masking> expression used y-aesthetic. ncol, integer-ish number columns facet.","code":""},{"path":"/reference/uss_plot_seasons_tiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot over season-final results — uss_plot_seasons_tiers","text":"Object S3 classes \"gg\", \"ggplot\", .e. ggplot2 object.","code":""},{"path":"/reference/uss_plot_seasons_tiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot over season-final results — uss_plot_seasons_tiers","text":"","code":"leeds_norwich <-   uss_get_matches(\"england\") |>   uss_make_teams_matches() |>   dplyr::filter(team %in% c(\"Leeds United\", \"Norwich City\")) |>   uss_make_seasons_final() |>   dplyr::arrange(team, season)  # use default (wins) uss_plot_seasons_tiers(leeds_norwich)   # use custom expression uss_plot_seasons_tiers(leeds_norwich, goals_for - goals_against)"},{"path":"/reference/uss_points_per_win.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate points — uss_points_per_win","title":"Calculate points — uss_points_per_win","text":"Given country season, return number points win.","code":""},{"path":"/reference/uss_points_per_win.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate points — uss_points_per_win","text":"","code":"uss_points_per_win(country, season, default = 3)"},{"path":"/reference/uss_points_per_win.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate points — uss_points_per_win","text":"country character scalar, specifies league. uss_countries() returns choices available engsoccerdata season integer-ish year football season. default integer-ish default value points-per-win, used value country uss_countries().","code":""},{"path":"/reference/uss_points_per_win.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate points — uss_points_per_win","text":"integer number points per win","code":""},{"path":"/reference/uss_points_per_win.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate points — uss_points_per_win","text":"function vectorized country season; length. country uss_countries, warning issued, defauuthe 3 returned ","code":""},{"path":"/reference/uss_points_per_win.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate points — uss_points_per_win","text":"","code":"uss_points_per_win(\"england\", 1980) #> [1] 2 uss_points_per_win(c(\"england\", \"england\"), c(1980, 1981)) #> [1] 2 3"},{"path":"/reference/uss_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Structure for printing results — uss_result","title":"Structure for printing results — uss_result","text":"teams_matches tibbles, can convenient see result structure, rather using goals_for goals_against.","code":""},{"path":"/reference/uss_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Structure for printing results — uss_result","text":"","code":"uss_result(goals_for = integer(), goals_against = integer())"},{"path":"/reference/uss_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Structure for printing results — uss_result","text":"goals_for integer-ish number goals team match. goals_against integer-ish number goals team match.","code":""},{"path":"/reference/uss_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Structure for printing results — uss_result","text":"S3 object class ussie_result.","code":""},{"path":"/reference/uss_result.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Structure for printing results — uss_result","text":"function vectorized goals_for goals_against; must length.","code":""},{"path":"/reference/uss_result.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Structure for printing results — uss_result","text":"","code":"uss_result(3, 2) #> <ussie_result[1]> #> [1] W 3-2 uss_get_matches(\"italy\") |>   uss_make_teams_matches() |>   dplyr::mutate(     result = uss_result(goals_for, goals_against),     .after = opponent   ) #> # A tibble: 50,808 × 10 #>    country tier  season team     date       at_home opponent    result goals_for #>    <chr>   <fct>  <int> <chr>    <date>     <lgl>   <chr>       <uss_>     <int> #>  1 Italy   1       1929 AC Milan 1929-10-06 TRUE    Brescia Ca…  W 4-1         4 #>  2 Italy   1       1929 AC Milan 1929-10-13 TRUE    Modena FC    W 1-0         1 #>  3 Italy   1       1929 AC Milan 1929-10-20 FALSE   SSC Napoli   L 1-2         1 #>  4 Italy   1       1929 AC Milan 1929-10-27 TRUE    AS Roma      W 3-1         3 #>  5 Italy   1       1929 AC Milan 1929-11-03 FALSE   Bologna FC   D 1-1         1 #>  6 Italy   1       1929 AC Milan 1929-11-10 TRUE    Inter        L 1-2         1 #>  7 Italy   1       1929 AC Milan 1929-11-17 FALSE   US Livorno   L 1-4         1 #>  8 Italy   1       1929 AC Milan 1929-11-24 TRUE    Lazio Roma   W 2-1         2 #>  9 Italy   1       1929 AC Milan 1929-12-08 FALSE   Juventus     L 1-3         1 #> 10 Italy   1       1929 AC Milan 1929-12-15 TRUE    US Cremone…  W 5-2         5 #> # … with 50,798 more rows, and 1 more variable: goals_against <int>"},{"path":"/reference/ussie-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ussie: Work with European Football League Data — ussie-package","title":"ussie: Work with European Football League Data — ussie-package","text":"first pass demo package \"Building Tidy Tools\" course rstudio::conf(2022L).","code":""},{"path":[]},{"path":"/reference/ussie-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ussie: Work with European Football League Data — ussie-package","text":"Maintainer: Ian Lyttle ijlyttle@.com (ORCID) Authors: Emma Rand emma.rand@york.ac.uk (ORCID)","code":""},{"path":"/news/index.html","id":"ussie-0009000","dir":"Changelog","previous_headings":"","what":"ussie 0.0.0.9000","title":"ussie 0.0.0.9000","text":"Added function create S3 object results: uss_result(). (#11) Added function plot values seasons: uss_plot_seasons_tiers(). (#7) Added functions calculate performance season: uss_make_seasons_cumulative(), uss_make_seasons_final(), helper uss_points_per_win(). (#5) Added uss_make_teams_matches() convert matches tibble teams-matches tibble. (#1) Changed _games _matches, e.g. uss_make_matches(). (#2) Added NEWS.md file track changes package.","code":""}]
