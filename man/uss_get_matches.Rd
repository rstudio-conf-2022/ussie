% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get-matches.R
\name{uss_get_matches}
\alias{uss_get_matches}
\title{Get a league-play tibble}
\usage{
uss_get_matches(country = uss_countries(), ...)
}
\arguments{
\item{country}{\code{character} scalar, specifies the league.
\code{uss_countries()} returns choices available from {engsoccerdata}}

\item{...}{<\code{\link[dplyr:dplyr_data_masking]{data-masking}}> Expressions that return a
logical value, and are defined in terms of the variables in \code{.data}.
If multiple expressions are included, they are combined with the \code{&} operator.
Only rows for which all conditions evaluate to \code{TRUE} are kept.}
}
\value{
\link[tibble:tibble-package]{tibble} with columns \code{country}, \code{date},
\code{season}, \code{tier}, \code{home}, \code{visitor}, \code{goals_home}, \code{goals_visitor}.
}
\description{
Gets league-play data for each game, from {engsoccerdata}, returning
a tibble in a standardised format.
}
\details{
\code{uss_countries()} returns the available choices; \code{"england"} is
the default. You can add filtering expressions via the \code{...} argument;
These are evaluated using \code{\link[dplyr:filter]{dplyr::filter()}}.

This function relies on an internal function, \code{uss_make_matches()}, to parse
the source data.
}
\examples{
uss_get_matches("england")
uss_get_matches("italy", season == 1990)
}
